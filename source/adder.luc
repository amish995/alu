module adder (
    input a[8],
    input b[8],
    output s[8],
    input alufn [6],
    output v,
    output n,
    output z
  ) {

  sig sum[9]; //9 bit to account for overflow and prevent exceptions being thrown for no reason

  always {

    s = 0;
    sum = 0;

    // Pure switch cases for the adder circuit
    // Subtractor made the default case to work with the comparator, adder and multiplier look for the full ALUFN
    case(alufn) {
       6b000000:
        s = a+b;
        sum = a+b;
       6b000010:
        s = a*b;
        sum = a*b;
       default:
        s = a-b;
        sum = a-b;
    }

    //Z,V and N for the adder.
    n = sum[7];
    v = ( a[7] & b[7] & (~sum[7])) |
          ((~a[7])&(~b[7])&sum[7]);
    z = ~|sum;
 }
}