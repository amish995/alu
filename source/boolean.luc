module boolean (

    input a[8],
    input b[8],    
    input alufn[6],
    output bool[8]

  ) {
 var i;
  
  always {
  
  bool = 0;
    
    //Boolean assignments for the provided table
    for (i=0; i<8; i++) {
    
      //Case statement that only cares about the 4 least significant bits
      case(alufn[3:0]) {
      
      4b1000: bool[i] = a[i] & b[i]; //Perform and operation for 1000
      
      4b1110: bool[i] = a[i] | b[i]; //Perform OR operation for 1110
      
      4b0110: bool[i] = a[i] ^ b[i]; //Perform XOR operation for 0110 
      
      4b1010: bool[i] = a[i];  //Pass only A for 1010
      
      4b1011: bool[i] = b[i]; //Pass only B for 1011
      }    
    } 
  }
}
